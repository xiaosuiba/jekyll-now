<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
	<channel>
		<title>ChrisLi&#39;s Blog on ChrisLi&#39;s Blog</title>
		<link>https://xiaosuiba.github.io/</link>
		<description>Recent content in ChrisLi&#39;s Blog </description>
		<generator>Hugo -- gohugo.io</generator>
		
  		<language>zh-cn</language>
		
		<managingEditor>Page(&#34;ChrisLi&#39;s Blog&#34;) (Chris Li)</managingEditor>
    	
  		<lastBuildDate>Fri, 14 May 2021 00:00:00 +0000</lastBuildDate>
		
		<atom:link href="/" rel="self" type="application/rss+xml" />
		
		<item>
			<title>Kubernet CSI Volume 插件设计文档(译)</title>
			<link>https://xiaosuiba.github.io/2021/05/14/container-storage-interface/</link>
			<pubDate>Fri, 14 May 2021 00:00:00 +0000</pubDate>
			<guid>https://xiaosuiba.github.io/2021/05/14/container-storage-interface/</guid>
			<description>&lt;p&gt;本文是对&lt;a href=&#34;https://github.com/kubernetes/community/blob/master/contributors/design-proposals/storage/container-storage-interface.md&#34;&gt;CSI Volume Plugins in Kubernetes Design Doc&lt;/a&gt;的翻译&lt;/p&gt;</description>
		</item>
      	
		<item>
			<title>TKEStack中LocalIdentity如何利用generateName机制生成Name</title>
			<link>https://xiaosuiba.github.io/2021/05/10/2021-05-10-how-does-tkestack-localidentity-make-use-of-generatename/</link>
			<pubDate>Mon, 10 May 2021 00:00:00 +0000</pubDate>
			<guid>https://xiaosuiba.github.io/2021/05/10/2021-05-10-how-does-tkestack-localidentity-make-use-of-generatename/</guid>
			<description>&lt;p&gt;本文从发现TKEStack自动生成&lt;code&gt;localidentity&lt;/code&gt;名称机制出发，稍微探索了kubernetes &lt;code&gt;generateName&lt;/code&gt;的作用机理。&lt;/p&gt;</description>
		</item>
      	
		<item>
			<title>TKEStack v1.6.0 1.19版本中pod告警策略失效问题分析</title>
			<link>https://xiaosuiba.github.io/2021/04/13/2021-04-13-tkestack-monitor-controller-issue/</link>
			<pubDate>Tue, 13 Apr 2021 00:00:00 +0000</pubDate>
			<guid>https://xiaosuiba.github.io/2021/04/13/2021-04-13-tkestack-monitor-controller-issue/</guid>
			<description>&lt;p&gt;本文从探索了TKEStack 1.6中部分告警失效的原因，并提出修复手段。&lt;/p&gt;</description>
		</item>
      	
		<item>
			<title>TKEStack v1.6.0 global集群中serviceaccount总是默认拥有所有权限</title>
			<link>https://xiaosuiba.github.io/2021/04/06/2021-04-06-tkestack-auth-api-issue/</link>
			<pubDate>Tue, 06 Apr 2021 00:00:00 +0000</pubDate>
			<guid>https://xiaosuiba.github.io/2021/04/06/2021-04-06-tkestack-auth-api-issue/</guid>
			<description>&lt;p&gt;本文从探索了TKEStack 1.6中global集群任何serviceaccount均具有cluster-admin权限原因。&lt;/p&gt;</description>
		</item>
      	
		<item>
			<title>TKEStack组件不能访问registry域名问题</title>
			<link>https://xiaosuiba.github.io/2021/03/31/2021-03-31-tkestack-registry-dns-issue/</link>
			<pubDate>Wed, 31 Mar 2021 00:00:00 +0000</pubDate>
			<guid>https://xiaosuiba.github.io/2021/03/31/2021-03-31-tkestack-registry-dns-issue/</guid>
			<description>&lt;p&gt;本文从探索了TKEStack 1.5版本中TKEStack组件不能访问registry域名的原因，并给出解决办法。&lt;/p&gt;</description>
		</item>
      	
		<item>
			<title>Why rest.Storage interface contains only one method</title>
			<link>https://xiaosuiba.github.io/2021/03/29/2021-03-29-why-only-new-in-rest-storage-interface-copy/</link>
			<pubDate>Mon, 29 Mar 2021 00:00:00 +0000</pubDate>
			<guid>https://xiaosuiba.github.io/2021/03/29/2021-03-29-why-only-new-in-rest-storage-interface-copy/</guid>
			<description>&lt;p&gt;rest.Storage interface contains only one method. This page show how could it utilize golang reflection to do the job.&lt;/p&gt;</description>
		</item>
      	
		<item>
			<title>Kubernetes sample-apiserver 代码阅读</title>
			<link>https://xiaosuiba.github.io/2021/03/26/2021-03-26-kubernetes-sample-apiserver/</link>
			<pubDate>Fri, 26 Mar 2021 00:00:00 +0000</pubDate>
			<guid>https://xiaosuiba.github.io/2021/03/26/2021-03-26-kubernetes-sample-apiserver/</guid>
			<description>启动过程 main.go:
func main() { logs.InitLogs() defer logs.FlushLogs() stopCh := genericapiserver.SetupSignalHandler() options := server.NewWardleServerOptions(os.Stdout, os.Stderr) cmd := server.NewCommandStartWardleServer(options, stopCh) cmd.Flags().AddGoFlagSet(flag.CommandLine) if err := cmd.Execute(); err != nil { klog.Fatal(err) } } options 调用 server.NewWardleServerOption 构建了一个 WardleServerOptions 配置对象
type WardleServerOptions struct { RecommendedOptions *genericoptions.RecommendedOptions SharedInformerFactory informers.SharedInformerFactory StdOut io.Writer StdErr io.Writer } RecommendedOptions 的解释为：
 // RecommendedOptions contains the recommended options for running an API server.
// If you add something to this list, it should be in a logical grouping.</description>
		</item>
      	
		<item>
			<title>Happy Spring Festival</title>
			<link>https://xiaosuiba.github.io/2019/02/02/2020-02-02-happy-spring-festival/</link>
			<pubDate>Sat, 02 Feb 2019 00:00:00 +0000</pubDate>
			<guid>https://xiaosuiba.github.io/2019/02/02/2020-02-02-happy-spring-festival/</guid>
			<description>Happy Spring Festival 赶在春节前把博客搬迁成 hugo 了 :) 祝大家春节快乐，来年大吉，Happy Spring Festival~</description>
		</item>
      	
	</channel>
</rss>
